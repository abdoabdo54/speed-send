#!/bin/bash

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m'

clear
echo -e "${RED}โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ${NC}"
echo -e "${RED}โ         CLEAN DEPLOY - FORCE REBUILD         โ${NC}"
echo -e "${RED}โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ${NC}"
echo ""

echo -e "${YELLOW}๐ฅ Step 1: Pulling latest code...${NC}"
git pull origin main
echo ""

echo -e "${YELLOW}๐งน Step 2: Cleaning Docker build cache...${NC}"
docker builder prune -af
echo ""

echo -e "${YELLOW}๐ฅ Step 3: Stopping and removing containers...${NC}"
docker-compose down -v
echo ""

echo -e "${YELLOW}๐๏ธ  Step 4: Removing old images...${NC}"
docker-compose down --rmi all
echo ""

echo -e "${YELLOW}๐จ Step 5: Building with no cache...${NC}"
docker-compose build --no-cache
echo ""

echo -e "${YELLOW}๐ Step 6: Starting services...${NC}"
docker-compose up -d
echo ""

echo -e "${YELLOW}โณ Step 7: Waiting for services...${NC}"
sleep 30
echo ""

echo -e "${YELLOW}๐ Step 8: Testing services...${NC}"
curl -s http://localhost:8000/health && echo " โ Backend OK" || echo " โ Backend FAILED"
curl -s http://localhost:3000 && echo " โ Frontend OK" || echo " โ Frontend FAILED"
echo ""

echo -e "${GREEN}โ CLEAN DEPLOY COMPLETE!${NC}"
echo ""

echo -e "${YELLOW}๐ Access URLs:${NC}"
echo -e "   Frontend: ${BLUE}http://$(hostname -I | awk '{print $1}'):3000${NC}"
echo -e "   Backend:  ${BLUE}http://$(hostname -I | awk '{print $1}'):8000${NC}"
echo ""

echo -e "${YELLOW}๐ If build still fails:${NC}"
echo -e "   docker-compose logs frontend"
echo -e "   docker-compose logs backend"
echo ""

